package com.bornfire.xbrl.entities.BRSS;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.format.annotation.DateTimeFormat;
@Entity
@Table(name="T3_OR_ANNUAL_COMPENSATION_TABLE")
public class T3ORReport {
	private String	A1_PRODUCT;
	private BigDecimal	A1_TOTAL_NUMBER;
	private BigDecimal	A1_TOTAL_NUMBER_ELIGIBLE;
	private BigDecimal	A1_ANNUAL_ASSURED_AMOUNT;
	private BigDecimal	A1_ANNUAL_VARIABLE_AMOUNT;
	private BigDecimal	A1_NUM_OF_FUNC_AREA;
	private BigDecimal	A1_OVERTIME_NUMBER;
	private BigDecimal	A1_OVERTIME_AMOUNT;
	private String	A2_PRODUCT;
	private BigDecimal	A2_TOTAL_NUMBER;
	private BigDecimal	A2_TOTAL_NUMBER_ELIGIBLE;
	private BigDecimal	A2_ANNUAL_ASSURED_AMOUNT;
	private BigDecimal	A2_ANNUAL_VARIABLE_AMOUNT;
	private BigDecimal	A2_NUM_OF_FUNC_AREA;
	private BigDecimal	A2_OVERTIME_NUMBER;
	private BigDecimal	A2_OVERTIME_AMOUNT;
	private String	A3_PRODUCT;
	private BigDecimal	A3_TOTAL_NUMBER;
	private BigDecimal	A3_TOTAL_NUMBER_ELIGIBLE;
	private BigDecimal	A3_ANNUAL_ASSURED_AMOUNT;
	private BigDecimal	A3_ANNUAL_VARIABLE_AMOUNT;
	private BigDecimal	A3_NUM_OF_FUNC_AREA;
	private BigDecimal	A3_OVERTIME_NUMBER;
	private BigDecimal	A3_OVERTIME_AMOUNT;
	private String	A4_PRODUCT;
	private BigDecimal	A4_TOTAL_NUMBER;
	private BigDecimal	A4_TOTAL_NUMBER_ELIGIBLE;
	private BigDecimal	A4_ANNUAL_ASSURED_AMOUNT;
	private BigDecimal	A4_ANNUAL_VARIABLE_AMOUNT;
	private BigDecimal	A4_NUM_OF_FUNC_AREA;
	private BigDecimal	A4_OVERTIME_NUMBER;
	private BigDecimal	A4_OVERTIME_AMOUNT;
	private String	A5_PRODUCT;
	private BigDecimal	A5_TOTAL_NUMBER;
	private BigDecimal	A5_TOTAL_NUMBER_ELIGIBLE;
	private BigDecimal	A5_ANNUAL_ASSURED_AMOUNT;
	private BigDecimal	A5_ANNUAL_VARIABLE_AMOUNT;
	private BigDecimal	A5_NUM_OF_FUNC_AREA;
	private BigDecimal	A5_OVERTIME_NUMBER;
	private BigDecimal	A5_OVERTIME_AMOUNT;
	private String	A6_PRODUCT;
	private BigDecimal	A6_TOTAL_NUMBER;
	private BigDecimal	A6_TOTAL_NUMBER_ELIGIBLE;
	private BigDecimal	A6_ANNUAL_ASSURED_AMOUNT;
	private BigDecimal	A6_ANNUAL_VARIABLE_AMOUNT;
	private BigDecimal	A6_NUM_OF_FUNC_AREA;
	private BigDecimal	A6_OVERTIME_NUMBER;
	private BigDecimal	A6_OVERTIME_AMOUNT;
	private String	A7_PRODUCT;
	private BigDecimal	A7_TOTAL_NUMBER;
	private BigDecimal	A7_TOTAL_NUMBER_ELIGIBLE;
	private BigDecimal	A7_ANNUAL_ASSURED_AMOUNT;
	private BigDecimal	A7_ANNUAL_VARIABLE_AMOUNT;
	private BigDecimal	A7_NUM_OF_FUNC_AREA;
	private BigDecimal	A7_OVERTIME_NUMBER;
	private BigDecimal	A7_OVERTIME_AMOUNT;
	private String	A8_PRODUCT;
	private BigDecimal	A8_TOTAL_NUMBER;
	private BigDecimal	A8_TOTAL_NUMBER_ELIGIBLE;
	private BigDecimal	A8_ANNUAL_ASSURED_AMOUNT;
	private BigDecimal	A8_ANNUAL_VARIABLE_AMOUNT;
	private BigDecimal	A8_NUM_OF_FUNC_AREA;
	private BigDecimal	A8_OVERTIME_NUMBER;
	private BigDecimal	A8_OVERTIME_AMOUNT;
	private String	A9_PRODUCT;
	private BigDecimal	A9_TOTAL_NUMBER;
	private BigDecimal	A9_TOTAL_NUMBER_ELIGIBLE;
	private BigDecimal	A9_ANNUAL_ASSURED_AMOUNT;
	private BigDecimal	A9_ANNUAL_VARIABLE_AMOUNT;
	private BigDecimal	A9_NUM_OF_FUNC_AREA;
	private BigDecimal	A9_OVERTIME_NUMBER;
	private BigDecimal	A9_OVERTIME_AMOUNT;
	private String	REPORT_CODE;
	private String	REPORT_NAME;
	@Temporal(TemporalType.DATE)
	@DateTimeFormat(pattern = "dd/MM/yyyy")
	@Id
	private Date	REPORT_DATE;
	@Temporal(TemporalType.DATE)
	@DateTimeFormat(pattern = "dd/MM/yyyy")
	private Date	REPORT_DUE_DATE;
	@Temporal(TemporalType.DATE)
	@DateTimeFormat(pattern = "dd/MM/yyyy")
	private Date	REP_SUBMIT_DATE;
	@Temporal(TemporalType.DATE)
	@DateTimeFormat(pattern = "dd/MM/yyyy")
	private Date	REP_PERIOD_FROM;
	@Temporal(TemporalType.DATE)
	@DateTimeFormat(pattern = "dd/MM/yyyy")
	private Date	REP_PERIOD_TO;
	private String	REP_FREQ;
	private String	NIL_REPORT_FLG;
	private String	ARCH_FLG;
	private String	ENTITY_FLG;
	private String	DEL_FLG;
	private String	MODIFY_FLG;
	private String	ENTRY_USER;
	private String	MODIFY_USER;
	private String	VERIFY_USER;
	@Temporal(TemporalType.DATE)
	@DateTimeFormat(pattern = "dd/MM/yyyy")
	private Date	ENTRY_TIME;
	@Temporal(TemporalType.DATE)
	@DateTimeFormat(pattern = "dd/MM/yyyy")
	private Date	MODIFY_TIME;
	@Temporal(TemporalType.DATE)
	@DateTimeFormat(pattern = "dd/MM/yyyy")
	private Date	VERIFY_TIME;
	private String	QTR_FLG;
	public String getA1_PRODUCT() {
		return A1_PRODUCT;
	}
	public void setA1_PRODUCT(String a1_PRODUCT) {
		A1_PRODUCT = a1_PRODUCT;
	}
	public BigDecimal getA1_TOTAL_NUMBER() {
		return A1_TOTAL_NUMBER;
	}
	public void setA1_TOTAL_NUMBER(BigDecimal a1_TOTAL_NUMBER) {
		A1_TOTAL_NUMBER = a1_TOTAL_NUMBER;
	}
	public BigDecimal getA1_TOTAL_NUMBER_ELIGIBLE() {
		return A1_TOTAL_NUMBER_ELIGIBLE;
	}
	public void setA1_TOTAL_NUMBER_ELIGIBLE(BigDecimal a1_TOTAL_NUMBER_ELIGIBLE) {
		A1_TOTAL_NUMBER_ELIGIBLE = a1_TOTAL_NUMBER_ELIGIBLE;
	}
	public BigDecimal getA1_ANNUAL_ASSURED_AMOUNT() {
		return A1_ANNUAL_ASSURED_AMOUNT;
	}
	public void setA1_ANNUAL_ASSURED_AMOUNT(BigDecimal a1_ANNUAL_ASSURED_AMOUNT) {
		A1_ANNUAL_ASSURED_AMOUNT = a1_ANNUAL_ASSURED_AMOUNT;
	}
	public BigDecimal getA1_ANNUAL_VARIABLE_AMOUNT() {
		return A1_ANNUAL_VARIABLE_AMOUNT;
	}
	public void setA1_ANNUAL_VARIABLE_AMOUNT(BigDecimal a1_ANNUAL_VARIABLE_AMOUNT) {
		A1_ANNUAL_VARIABLE_AMOUNT = a1_ANNUAL_VARIABLE_AMOUNT;
	}
	public BigDecimal getA1_NUM_OF_FUNC_AREA() {
		return A1_NUM_OF_FUNC_AREA;
	}
	public void setA1_NUM_OF_FUNC_AREA(BigDecimal a1_NUM_OF_FUNC_AREA) {
		A1_NUM_OF_FUNC_AREA = a1_NUM_OF_FUNC_AREA;
	}
	public BigDecimal getA1_OVERTIME_NUMBER() {
		return A1_OVERTIME_NUMBER;
	}
	public void setA1_OVERTIME_NUMBER(BigDecimal a1_OVERTIME_NUMBER) {
		A1_OVERTIME_NUMBER = a1_OVERTIME_NUMBER;
	}
	public BigDecimal getA1_OVERTIME_AMOUNT() {
		return A1_OVERTIME_AMOUNT;
	}
	public void setA1_OVERTIME_AMOUNT(BigDecimal a1_OVERTIME_AMOUNT) {
		A1_OVERTIME_AMOUNT = a1_OVERTIME_AMOUNT;
	}
	public String getA2_PRODUCT() {
		return A2_PRODUCT;
	}
	public void setA2_PRODUCT(String a2_PRODUCT) {
		A2_PRODUCT = a2_PRODUCT;
	}
	public BigDecimal getA2_TOTAL_NUMBER() {
		return A2_TOTAL_NUMBER;
	}
	public void setA2_TOTAL_NUMBER(BigDecimal a2_TOTAL_NUMBER) {
		A2_TOTAL_NUMBER = a2_TOTAL_NUMBER;
	}
	public BigDecimal getA2_TOTAL_NUMBER_ELIGIBLE() {
		return A2_TOTAL_NUMBER_ELIGIBLE;
	}
	public void setA2_TOTAL_NUMBER_ELIGIBLE(BigDecimal a2_TOTAL_NUMBER_ELIGIBLE) {
		A2_TOTAL_NUMBER_ELIGIBLE = a2_TOTAL_NUMBER_ELIGIBLE;
	}
	public BigDecimal getA2_ANNUAL_ASSURED_AMOUNT() {
		return A2_ANNUAL_ASSURED_AMOUNT;
	}
	public void setA2_ANNUAL_ASSURED_AMOUNT(BigDecimal a2_ANNUAL_ASSURED_AMOUNT) {
		A2_ANNUAL_ASSURED_AMOUNT = a2_ANNUAL_ASSURED_AMOUNT;
	}
	public BigDecimal getA2_ANNUAL_VARIABLE_AMOUNT() {
		return A2_ANNUAL_VARIABLE_AMOUNT;
	}
	public void setA2_ANNUAL_VARIABLE_AMOUNT(BigDecimal a2_ANNUAL_VARIABLE_AMOUNT) {
		A2_ANNUAL_VARIABLE_AMOUNT = a2_ANNUAL_VARIABLE_AMOUNT;
	}
	public BigDecimal getA2_NUM_OF_FUNC_AREA() {
		return A2_NUM_OF_FUNC_AREA;
	}
	public void setA2_NUM_OF_FUNC_AREA(BigDecimal a2_NUM_OF_FUNC_AREA) {
		A2_NUM_OF_FUNC_AREA = a2_NUM_OF_FUNC_AREA;
	}
	public BigDecimal getA2_OVERTIME_NUMBER() {
		return A2_OVERTIME_NUMBER;
	}
	public void setA2_OVERTIME_NUMBER(BigDecimal a2_OVERTIME_NUMBER) {
		A2_OVERTIME_NUMBER = a2_OVERTIME_NUMBER;
	}
	public BigDecimal getA2_OVERTIME_AMOUNT() {
		return A2_OVERTIME_AMOUNT;
	}
	public void setA2_OVERTIME_AMOUNT(BigDecimal a2_OVERTIME_AMOUNT) {
		A2_OVERTIME_AMOUNT = a2_OVERTIME_AMOUNT;
	}
	public String getA3_PRODUCT() {
		return A3_PRODUCT;
	}
	public void setA3_PRODUCT(String a3_PRODUCT) {
		A3_PRODUCT = a3_PRODUCT;
	}
	public BigDecimal getA3_TOTAL_NUMBER() {
		return A3_TOTAL_NUMBER;
	}
	public void setA3_TOTAL_NUMBER(BigDecimal a3_TOTAL_NUMBER) {
		A3_TOTAL_NUMBER = a3_TOTAL_NUMBER;
	}
	public BigDecimal getA3_TOTAL_NUMBER_ELIGIBLE() {
		return A3_TOTAL_NUMBER_ELIGIBLE;
	}
	public void setA3_TOTAL_NUMBER_ELIGIBLE(BigDecimal a3_TOTAL_NUMBER_ELIGIBLE) {
		A3_TOTAL_NUMBER_ELIGIBLE = a3_TOTAL_NUMBER_ELIGIBLE;
	}
	public BigDecimal getA3_ANNUAL_ASSURED_AMOUNT() {
		return A3_ANNUAL_ASSURED_AMOUNT;
	}
	public void setA3_ANNUAL_ASSURED_AMOUNT(BigDecimal a3_ANNUAL_ASSURED_AMOUNT) {
		A3_ANNUAL_ASSURED_AMOUNT = a3_ANNUAL_ASSURED_AMOUNT;
	}
	public BigDecimal getA3_ANNUAL_VARIABLE_AMOUNT() {
		return A3_ANNUAL_VARIABLE_AMOUNT;
	}
	public void setA3_ANNUAL_VARIABLE_AMOUNT(BigDecimal a3_ANNUAL_VARIABLE_AMOUNT) {
		A3_ANNUAL_VARIABLE_AMOUNT = a3_ANNUAL_VARIABLE_AMOUNT;
	}
	public BigDecimal getA3_NUM_OF_FUNC_AREA() {
		return A3_NUM_OF_FUNC_AREA;
	}
	public void setA3_NUM_OF_FUNC_AREA(BigDecimal a3_NUM_OF_FUNC_AREA) {
		A3_NUM_OF_FUNC_AREA = a3_NUM_OF_FUNC_AREA;
	}
	public BigDecimal getA3_OVERTIME_NUMBER() {
		return A3_OVERTIME_NUMBER;
	}
	public void setA3_OVERTIME_NUMBER(BigDecimal a3_OVERTIME_NUMBER) {
		A3_OVERTIME_NUMBER = a3_OVERTIME_NUMBER;
	}
	public BigDecimal getA3_OVERTIME_AMOUNT() {
		return A3_OVERTIME_AMOUNT;
	}
	public void setA3_OVERTIME_AMOUNT(BigDecimal a3_OVERTIME_AMOUNT) {
		A3_OVERTIME_AMOUNT = a3_OVERTIME_AMOUNT;
	}
	public String getA4_PRODUCT() {
		return A4_PRODUCT;
	}
	public void setA4_PRODUCT(String a4_PRODUCT) {
		A4_PRODUCT = a4_PRODUCT;
	}
	public BigDecimal getA4_TOTAL_NUMBER() {
		return A4_TOTAL_NUMBER;
	}
	public void setA4_TOTAL_NUMBER(BigDecimal a4_TOTAL_NUMBER) {
		A4_TOTAL_NUMBER = a4_TOTAL_NUMBER;
	}
	public BigDecimal getA4_TOTAL_NUMBER_ELIGIBLE() {
		return A4_TOTAL_NUMBER_ELIGIBLE;
	}
	public void setA4_TOTAL_NUMBER_ELIGIBLE(BigDecimal a4_TOTAL_NUMBER_ELIGIBLE) {
		A4_TOTAL_NUMBER_ELIGIBLE = a4_TOTAL_NUMBER_ELIGIBLE;
	}
	public BigDecimal getA4_ANNUAL_ASSURED_AMOUNT() {
		return A4_ANNUAL_ASSURED_AMOUNT;
	}
	public void setA4_ANNUAL_ASSURED_AMOUNT(BigDecimal a4_ANNUAL_ASSURED_AMOUNT) {
		A4_ANNUAL_ASSURED_AMOUNT = a4_ANNUAL_ASSURED_AMOUNT;
	}
	public BigDecimal getA4_ANNUAL_VARIABLE_AMOUNT() {
		return A4_ANNUAL_VARIABLE_AMOUNT;
	}
	public void setA4_ANNUAL_VARIABLE_AMOUNT(BigDecimal a4_ANNUAL_VARIABLE_AMOUNT) {
		A4_ANNUAL_VARIABLE_AMOUNT = a4_ANNUAL_VARIABLE_AMOUNT;
	}
	public BigDecimal getA4_NUM_OF_FUNC_AREA() {
		return A4_NUM_OF_FUNC_AREA;
	}
	public void setA4_NUM_OF_FUNC_AREA(BigDecimal a4_NUM_OF_FUNC_AREA) {
		A4_NUM_OF_FUNC_AREA = a4_NUM_OF_FUNC_AREA;
	}
	public BigDecimal getA4_OVERTIME_NUMBER() {
		return A4_OVERTIME_NUMBER;
	}
	public void setA4_OVERTIME_NUMBER(BigDecimal a4_OVERTIME_NUMBER) {
		A4_OVERTIME_NUMBER = a4_OVERTIME_NUMBER;
	}
	public BigDecimal getA4_OVERTIME_AMOUNT() {
		return A4_OVERTIME_AMOUNT;
	}
	public void setA4_OVERTIME_AMOUNT(BigDecimal a4_OVERTIME_AMOUNT) {
		A4_OVERTIME_AMOUNT = a4_OVERTIME_AMOUNT;
	}
	public String getA5_PRODUCT() {
		return A5_PRODUCT;
	}
	public void setA5_PRODUCT(String a5_PRODUCT) {
		A5_PRODUCT = a5_PRODUCT;
	}
	public BigDecimal getA5_TOTAL_NUMBER() {
		return A5_TOTAL_NUMBER;
	}
	public void setA5_TOTAL_NUMBER(BigDecimal a5_TOTAL_NUMBER) {
		A5_TOTAL_NUMBER = a5_TOTAL_NUMBER;
	}
	public BigDecimal getA5_TOTAL_NUMBER_ELIGIBLE() {
		return A5_TOTAL_NUMBER_ELIGIBLE;
	}
	public void setA5_TOTAL_NUMBER_ELIGIBLE(BigDecimal a5_TOTAL_NUMBER_ELIGIBLE) {
		A5_TOTAL_NUMBER_ELIGIBLE = a5_TOTAL_NUMBER_ELIGIBLE;
	}
	public BigDecimal getA5_ANNUAL_ASSURED_AMOUNT() {
		return A5_ANNUAL_ASSURED_AMOUNT;
	}
	public void setA5_ANNUAL_ASSURED_AMOUNT(BigDecimal a5_ANNUAL_ASSURED_AMOUNT) {
		A5_ANNUAL_ASSURED_AMOUNT = a5_ANNUAL_ASSURED_AMOUNT;
	}
	public BigDecimal getA5_ANNUAL_VARIABLE_AMOUNT() {
		return A5_ANNUAL_VARIABLE_AMOUNT;
	}
	public void setA5_ANNUAL_VARIABLE_AMOUNT(BigDecimal a5_ANNUAL_VARIABLE_AMOUNT) {
		A5_ANNUAL_VARIABLE_AMOUNT = a5_ANNUAL_VARIABLE_AMOUNT;
	}
	public BigDecimal getA5_NUM_OF_FUNC_AREA() {
		return A5_NUM_OF_FUNC_AREA;
	}
	public void setA5_NUM_OF_FUNC_AREA(BigDecimal a5_NUM_OF_FUNC_AREA) {
		A5_NUM_OF_FUNC_AREA = a5_NUM_OF_FUNC_AREA;
	}
	public BigDecimal getA5_OVERTIME_NUMBER() {
		return A5_OVERTIME_NUMBER;
	}
	public void setA5_OVERTIME_NUMBER(BigDecimal a5_OVERTIME_NUMBER) {
		A5_OVERTIME_NUMBER = a5_OVERTIME_NUMBER;
	}
	public BigDecimal getA5_OVERTIME_AMOUNT() {
		return A5_OVERTIME_AMOUNT;
	}
	public void setA5_OVERTIME_AMOUNT(BigDecimal a5_OVERTIME_AMOUNT) {
		A5_OVERTIME_AMOUNT = a5_OVERTIME_AMOUNT;
	}
	public String getA6_PRODUCT() {
		return A6_PRODUCT;
	}
	public void setA6_PRODUCT(String a6_PRODUCT) {
		A6_PRODUCT = a6_PRODUCT;
	}
	public BigDecimal getA6_TOTAL_NUMBER() {
		return A6_TOTAL_NUMBER;
	}
	public void setA6_TOTAL_NUMBER(BigDecimal a6_TOTAL_NUMBER) {
		A6_TOTAL_NUMBER = a6_TOTAL_NUMBER;
	}
	public BigDecimal getA6_TOTAL_NUMBER_ELIGIBLE() {
		return A6_TOTAL_NUMBER_ELIGIBLE;
	}
	public void setA6_TOTAL_NUMBER_ELIGIBLE(BigDecimal a6_TOTAL_NUMBER_ELIGIBLE) {
		A6_TOTAL_NUMBER_ELIGIBLE = a6_TOTAL_NUMBER_ELIGIBLE;
	}
	public BigDecimal getA6_ANNUAL_ASSURED_AMOUNT() {
		return A6_ANNUAL_ASSURED_AMOUNT;
	}
	public void setA6_ANNUAL_ASSURED_AMOUNT(BigDecimal a6_ANNUAL_ASSURED_AMOUNT) {
		A6_ANNUAL_ASSURED_AMOUNT = a6_ANNUAL_ASSURED_AMOUNT;
	}
	public BigDecimal getA6_ANNUAL_VARIABLE_AMOUNT() {
		return A6_ANNUAL_VARIABLE_AMOUNT;
	}
	public void setA6_ANNUAL_VARIABLE_AMOUNT(BigDecimal a6_ANNUAL_VARIABLE_AMOUNT) {
		A6_ANNUAL_VARIABLE_AMOUNT = a6_ANNUAL_VARIABLE_AMOUNT;
	}
	public BigDecimal getA6_NUM_OF_FUNC_AREA() {
		return A6_NUM_OF_FUNC_AREA;
	}
	public void setA6_NUM_OF_FUNC_AREA(BigDecimal a6_NUM_OF_FUNC_AREA) {
		A6_NUM_OF_FUNC_AREA = a6_NUM_OF_FUNC_AREA;
	}
	public BigDecimal getA6_OVERTIME_NUMBER() {
		return A6_OVERTIME_NUMBER;
	}
	public void setA6_OVERTIME_NUMBER(BigDecimal a6_OVERTIME_NUMBER) {
		A6_OVERTIME_NUMBER = a6_OVERTIME_NUMBER;
	}
	public BigDecimal getA6_OVERTIME_AMOUNT() {
		return A6_OVERTIME_AMOUNT;
	}
	public void setA6_OVERTIME_AMOUNT(BigDecimal a6_OVERTIME_AMOUNT) {
		A6_OVERTIME_AMOUNT = a6_OVERTIME_AMOUNT;
	}
	public String getA7_PRODUCT() {
		return A7_PRODUCT;
	}
	public void setA7_PRODUCT(String a7_PRODUCT) {
		A7_PRODUCT = a7_PRODUCT;
	}
	public BigDecimal getA7_TOTAL_NUMBER() {
		return A7_TOTAL_NUMBER;
	}
	public void setA7_TOTAL_NUMBER(BigDecimal a7_TOTAL_NUMBER) {
		A7_TOTAL_NUMBER = a7_TOTAL_NUMBER;
	}
	public BigDecimal getA7_TOTAL_NUMBER_ELIGIBLE() {
		return A7_TOTAL_NUMBER_ELIGIBLE;
	}
	public void setA7_TOTAL_NUMBER_ELIGIBLE(BigDecimal a7_TOTAL_NUMBER_ELIGIBLE) {
		A7_TOTAL_NUMBER_ELIGIBLE = a7_TOTAL_NUMBER_ELIGIBLE;
	}
	public BigDecimal getA7_ANNUAL_ASSURED_AMOUNT() {
		return A7_ANNUAL_ASSURED_AMOUNT;
	}
	public void setA7_ANNUAL_ASSURED_AMOUNT(BigDecimal a7_ANNUAL_ASSURED_AMOUNT) {
		A7_ANNUAL_ASSURED_AMOUNT = a7_ANNUAL_ASSURED_AMOUNT;
	}
	public BigDecimal getA7_ANNUAL_VARIABLE_AMOUNT() {
		return A7_ANNUAL_VARIABLE_AMOUNT;
	}
	public void setA7_ANNUAL_VARIABLE_AMOUNT(BigDecimal a7_ANNUAL_VARIABLE_AMOUNT) {
		A7_ANNUAL_VARIABLE_AMOUNT = a7_ANNUAL_VARIABLE_AMOUNT;
	}
	public BigDecimal getA7_NUM_OF_FUNC_AREA() {
		return A7_NUM_OF_FUNC_AREA;
	}
	public void setA7_NUM_OF_FUNC_AREA(BigDecimal a7_NUM_OF_FUNC_AREA) {
		A7_NUM_OF_FUNC_AREA = a7_NUM_OF_FUNC_AREA;
	}
	public BigDecimal getA7_OVERTIME_NUMBER() {
		return A7_OVERTIME_NUMBER;
	}
	public void setA7_OVERTIME_NUMBER(BigDecimal a7_OVERTIME_NUMBER) {
		A7_OVERTIME_NUMBER = a7_OVERTIME_NUMBER;
	}
	public BigDecimal getA7_OVERTIME_AMOUNT() {
		return A7_OVERTIME_AMOUNT;
	}
	public void setA7_OVERTIME_AMOUNT(BigDecimal a7_OVERTIME_AMOUNT) {
		A7_OVERTIME_AMOUNT = a7_OVERTIME_AMOUNT;
	}
	public String getA8_PRODUCT() {
		return A8_PRODUCT;
	}
	public void setA8_PRODUCT(String a8_PRODUCT) {
		A8_PRODUCT = a8_PRODUCT;
	}
	public BigDecimal getA8_TOTAL_NUMBER() {
		return A8_TOTAL_NUMBER;
	}
	public void setA8_TOTAL_NUMBER(BigDecimal a8_TOTAL_NUMBER) {
		A8_TOTAL_NUMBER = a8_TOTAL_NUMBER;
	}
	public BigDecimal getA8_TOTAL_NUMBER_ELIGIBLE() {
		return A8_TOTAL_NUMBER_ELIGIBLE;
	}
	public void setA8_TOTAL_NUMBER_ELIGIBLE(BigDecimal a8_TOTAL_NUMBER_ELIGIBLE) {
		A8_TOTAL_NUMBER_ELIGIBLE = a8_TOTAL_NUMBER_ELIGIBLE;
	}
	public BigDecimal getA8_ANNUAL_ASSURED_AMOUNT() {
		return A8_ANNUAL_ASSURED_AMOUNT;
	}
	public void setA8_ANNUAL_ASSURED_AMOUNT(BigDecimal a8_ANNUAL_ASSURED_AMOUNT) {
		A8_ANNUAL_ASSURED_AMOUNT = a8_ANNUAL_ASSURED_AMOUNT;
	}
	public BigDecimal getA8_ANNUAL_VARIABLE_AMOUNT() {
		return A8_ANNUAL_VARIABLE_AMOUNT;
	}
	public void setA8_ANNUAL_VARIABLE_AMOUNT(BigDecimal a8_ANNUAL_VARIABLE_AMOUNT) {
		A8_ANNUAL_VARIABLE_AMOUNT = a8_ANNUAL_VARIABLE_AMOUNT;
	}
	public BigDecimal getA8_NUM_OF_FUNC_AREA() {
		return A8_NUM_OF_FUNC_AREA;
	}
	public void setA8_NUM_OF_FUNC_AREA(BigDecimal a8_NUM_OF_FUNC_AREA) {
		A8_NUM_OF_FUNC_AREA = a8_NUM_OF_FUNC_AREA;
	}
	public BigDecimal getA8_OVERTIME_NUMBER() {
		return A8_OVERTIME_NUMBER;
	}
	public void setA8_OVERTIME_NUMBER(BigDecimal a8_OVERTIME_NUMBER) {
		A8_OVERTIME_NUMBER = a8_OVERTIME_NUMBER;
	}
	public BigDecimal getA8_OVERTIME_AMOUNT() {
		return A8_OVERTIME_AMOUNT;
	}
	public void setA8_OVERTIME_AMOUNT(BigDecimal a8_OVERTIME_AMOUNT) {
		A8_OVERTIME_AMOUNT = a8_OVERTIME_AMOUNT;
	}
	public String getA9_PRODUCT() {
		return A9_PRODUCT;
	}
	public void setA9_PRODUCT(String a9_PRODUCT) {
		A9_PRODUCT = a9_PRODUCT;
	}
	public BigDecimal getA9_TOTAL_NUMBER() {
		return A9_TOTAL_NUMBER;
	}
	public void setA9_TOTAL_NUMBER(BigDecimal a9_TOTAL_NUMBER) {
		A9_TOTAL_NUMBER = a9_TOTAL_NUMBER;
	}
	public BigDecimal getA9_TOTAL_NUMBER_ELIGIBLE() {
		return A9_TOTAL_NUMBER_ELIGIBLE;
	}
	public void setA9_TOTAL_NUMBER_ELIGIBLE(BigDecimal a9_TOTAL_NUMBER_ELIGIBLE) {
		A9_TOTAL_NUMBER_ELIGIBLE = a9_TOTAL_NUMBER_ELIGIBLE;
	}
	public BigDecimal getA9_ANNUAL_ASSURED_AMOUNT() {
		return A9_ANNUAL_ASSURED_AMOUNT;
	}
	public void setA9_ANNUAL_ASSURED_AMOUNT(BigDecimal a9_ANNUAL_ASSURED_AMOUNT) {
		A9_ANNUAL_ASSURED_AMOUNT = a9_ANNUAL_ASSURED_AMOUNT;
	}
	public BigDecimal getA9_ANNUAL_VARIABLE_AMOUNT() {
		return A9_ANNUAL_VARIABLE_AMOUNT;
	}
	public void setA9_ANNUAL_VARIABLE_AMOUNT(BigDecimal a9_ANNUAL_VARIABLE_AMOUNT) {
		A9_ANNUAL_VARIABLE_AMOUNT = a9_ANNUAL_VARIABLE_AMOUNT;
	}
	public BigDecimal getA9_NUM_OF_FUNC_AREA() {
		return A9_NUM_OF_FUNC_AREA;
	}
	public void setA9_NUM_OF_FUNC_AREA(BigDecimal a9_NUM_OF_FUNC_AREA) {
		A9_NUM_OF_FUNC_AREA = a9_NUM_OF_FUNC_AREA;
	}
	public BigDecimal getA9_OVERTIME_NUMBER() {
		return A9_OVERTIME_NUMBER;
	}
	public void setA9_OVERTIME_NUMBER(BigDecimal a9_OVERTIME_NUMBER) {
		A9_OVERTIME_NUMBER = a9_OVERTIME_NUMBER;
	}
	public BigDecimal getA9_OVERTIME_AMOUNT() {
		return A9_OVERTIME_AMOUNT;
	}
	public void setA9_OVERTIME_AMOUNT(BigDecimal a9_OVERTIME_AMOUNT) {
		A9_OVERTIME_AMOUNT = a9_OVERTIME_AMOUNT;
	}
	public String getREPORT_CODE() {
		return REPORT_CODE;
	}
	public void setREPORT_CODE(String rEPORT_CODE) {
		REPORT_CODE = rEPORT_CODE;
	}
	public String getREPORT_NAME() {
		return REPORT_NAME;
	}
	public void setREPORT_NAME(String rEPORT_NAME) {
		REPORT_NAME = rEPORT_NAME;
	}
	public Date getREPORT_DATE() {
		return REPORT_DATE;
	}
	public void setREPORT_DATE(Date rEPORT_DATE) {
		REPORT_DATE = rEPORT_DATE;
	}
	public Date getREPORT_DUE_DATE() {
		return REPORT_DUE_DATE;
	}
	public void setREPORT_DUE_DATE(Date rEPORT_DUE_DATE) {
		REPORT_DUE_DATE = rEPORT_DUE_DATE;
	}
	public Date getREP_SUBMIT_DATE() {
		return REP_SUBMIT_DATE;
	}
	public void setREP_SUBMIT_DATE(Date rEP_SUBMIT_DATE) {
		REP_SUBMIT_DATE = rEP_SUBMIT_DATE;
	}
	public Date getREP_PERIOD_FROM() {
		return REP_PERIOD_FROM;
	}
	public void setREP_PERIOD_FROM(Date rEP_PERIOD_FROM) {
		REP_PERIOD_FROM = rEP_PERIOD_FROM;
	}
	public Date getREP_PERIOD_TO() {
		return REP_PERIOD_TO;
	}
	public void setREP_PERIOD_TO(Date rEP_PERIOD_TO) {
		REP_PERIOD_TO = rEP_PERIOD_TO;
	}
	public String getREP_FREQ() {
		return REP_FREQ;
	}
	public void setREP_FREQ(String rEP_FREQ) {
		REP_FREQ = rEP_FREQ;
	}
	public String getNIL_REPORT_FLG() {
		return NIL_REPORT_FLG;
	}
	public void setNIL_REPORT_FLG(String nIL_REPORT_FLG) {
		NIL_REPORT_FLG = nIL_REPORT_FLG;
	}
	public String getARCH_FLG() {
		return ARCH_FLG;
	}
	public void setARCH_FLG(String aRCH_FLG) {
		ARCH_FLG = aRCH_FLG;
	}
	public String getENTITY_FLG() {
		return ENTITY_FLG;
	}
	public void setENTITY_FLG(String eNTITY_FLG) {
		ENTITY_FLG = eNTITY_FLG;
	}
	public String getDEL_FLG() {
		return DEL_FLG;
	}
	public void setDEL_FLG(String dEL_FLG) {
		DEL_FLG = dEL_FLG;
	}
	public String getMODIFY_FLG() {
		return MODIFY_FLG;
	}
	public void setMODIFY_FLG(String mODIFY_FLG) {
		MODIFY_FLG = mODIFY_FLG;
	}
	public String getENTRY_USER() {
		return ENTRY_USER;
	}
	public void setENTRY_USER(String eNTRY_USER) {
		ENTRY_USER = eNTRY_USER;
	}
	public String getMODIFY_USER() {
		return MODIFY_USER;
	}
	public void setMODIFY_USER(String mODIFY_USER) {
		MODIFY_USER = mODIFY_USER;
	}
	public String getVERIFY_USER() {
		return VERIFY_USER;
	}
	public void setVERIFY_USER(String vERIFY_USER) {
		VERIFY_USER = vERIFY_USER;
	}
	public Date getENTRY_TIME() {
		return ENTRY_TIME;
	}
	public void setENTRY_TIME(Date eNTRY_TIME) {
		ENTRY_TIME = eNTRY_TIME;
	}
	public Date getMODIFY_TIME() {
		return MODIFY_TIME;
	}
	public void setMODIFY_TIME(Date mODIFY_TIME) {
		MODIFY_TIME = mODIFY_TIME;
	}
	public Date getVERIFY_TIME() {
		return VERIFY_TIME;
	}
	public void setVERIFY_TIME(Date vERIFY_TIME) {
		VERIFY_TIME = vERIFY_TIME;
	}
	public String getQTR_FLG() {
		return QTR_FLG;
	}
	public void setQTR_FLG(String qTR_FLG) {
		QTR_FLG = qTR_FLG;
	}
	public T3ORReport(String a1_PRODUCT, BigDecimal a1_TOTAL_NUMBER, BigDecimal a1_TOTAL_NUMBER_ELIGIBLE,
			BigDecimal a1_ANNUAL_ASSURED_AMOUNT, BigDecimal a1_ANNUAL_VARIABLE_AMOUNT, BigDecimal a1_NUM_OF_FUNC_AREA,
			BigDecimal a1_OVERTIME_NUMBER, BigDecimal a1_OVERTIME_AMOUNT, String a2_PRODUCT, BigDecimal a2_TOTAL_NUMBER,
			BigDecimal a2_TOTAL_NUMBER_ELIGIBLE, BigDecimal a2_ANNUAL_ASSURED_AMOUNT,
			BigDecimal a2_ANNUAL_VARIABLE_AMOUNT, BigDecimal a2_NUM_OF_FUNC_AREA, BigDecimal a2_OVERTIME_NUMBER,
			BigDecimal a2_OVERTIME_AMOUNT, String a3_PRODUCT, BigDecimal a3_TOTAL_NUMBER,
			BigDecimal a3_TOTAL_NUMBER_ELIGIBLE, BigDecimal a3_ANNUAL_ASSURED_AMOUNT,
			BigDecimal a3_ANNUAL_VARIABLE_AMOUNT, BigDecimal a3_NUM_OF_FUNC_AREA, BigDecimal a3_OVERTIME_NUMBER,
			BigDecimal a3_OVERTIME_AMOUNT, String a4_PRODUCT, BigDecimal a4_TOTAL_NUMBER,
			BigDecimal a4_TOTAL_NUMBER_ELIGIBLE, BigDecimal a4_ANNUAL_ASSURED_AMOUNT,
			BigDecimal a4_ANNUAL_VARIABLE_AMOUNT, BigDecimal a4_NUM_OF_FUNC_AREA, BigDecimal a4_OVERTIME_NUMBER,
			BigDecimal a4_OVERTIME_AMOUNT, String a5_PRODUCT, BigDecimal a5_TOTAL_NUMBER,
			BigDecimal a5_TOTAL_NUMBER_ELIGIBLE, BigDecimal a5_ANNUAL_ASSURED_AMOUNT,
			BigDecimal a5_ANNUAL_VARIABLE_AMOUNT, BigDecimal a5_NUM_OF_FUNC_AREA, BigDecimal a5_OVERTIME_NUMBER,
			BigDecimal a5_OVERTIME_AMOUNT, String a6_PRODUCT, BigDecimal a6_TOTAL_NUMBER,
			BigDecimal a6_TOTAL_NUMBER_ELIGIBLE, BigDecimal a6_ANNUAL_ASSURED_AMOUNT,
			BigDecimal a6_ANNUAL_VARIABLE_AMOUNT, BigDecimal a6_NUM_OF_FUNC_AREA, BigDecimal a6_OVERTIME_NUMBER,
			BigDecimal a6_OVERTIME_AMOUNT, String a7_PRODUCT, BigDecimal a7_TOTAL_NUMBER,
			BigDecimal a7_TOTAL_NUMBER_ELIGIBLE, BigDecimal a7_ANNUAL_ASSURED_AMOUNT,
			BigDecimal a7_ANNUAL_VARIABLE_AMOUNT, BigDecimal a7_NUM_OF_FUNC_AREA, BigDecimal a7_OVERTIME_NUMBER,
			BigDecimal a7_OVERTIME_AMOUNT, String a8_PRODUCT, BigDecimal a8_TOTAL_NUMBER,
			BigDecimal a8_TOTAL_NUMBER_ELIGIBLE, BigDecimal a8_ANNUAL_ASSURED_AMOUNT,
			BigDecimal a8_ANNUAL_VARIABLE_AMOUNT, BigDecimal a8_NUM_OF_FUNC_AREA, BigDecimal a8_OVERTIME_NUMBER,
			BigDecimal a8_OVERTIME_AMOUNT, String a9_PRODUCT, BigDecimal a9_TOTAL_NUMBER,
			BigDecimal a9_TOTAL_NUMBER_ELIGIBLE, BigDecimal a9_ANNUAL_ASSURED_AMOUNT,
			BigDecimal a9_ANNUAL_VARIABLE_AMOUNT, BigDecimal a9_NUM_OF_FUNC_AREA, BigDecimal a9_OVERTIME_NUMBER,
			BigDecimal a9_OVERTIME_AMOUNT, String rEPORT_CODE, String rEPORT_NAME, Date rEPORT_DATE,
			Date rEPORT_DUE_DATE, Date rEP_SUBMIT_DATE, Date rEP_PERIOD_FROM, Date rEP_PERIOD_TO, String rEP_FREQ,
			String nIL_REPORT_FLG, String aRCH_FLG, String eNTITY_FLG, String dEL_FLG, String mODIFY_FLG,
			String eNTRY_USER, String mODIFY_USER, String vERIFY_USER, Date eNTRY_TIME, Date mODIFY_TIME,
			Date vERIFY_TIME, String qTR_FLG) {
		super();
		A1_PRODUCT = a1_PRODUCT;
		A1_TOTAL_NUMBER = a1_TOTAL_NUMBER;
		A1_TOTAL_NUMBER_ELIGIBLE = a1_TOTAL_NUMBER_ELIGIBLE;
		A1_ANNUAL_ASSURED_AMOUNT = a1_ANNUAL_ASSURED_AMOUNT;
		A1_ANNUAL_VARIABLE_AMOUNT = a1_ANNUAL_VARIABLE_AMOUNT;
		A1_NUM_OF_FUNC_AREA = a1_NUM_OF_FUNC_AREA;
		A1_OVERTIME_NUMBER = a1_OVERTIME_NUMBER;
		A1_OVERTIME_AMOUNT = a1_OVERTIME_AMOUNT;
		A2_PRODUCT = a2_PRODUCT;
		A2_TOTAL_NUMBER = a2_TOTAL_NUMBER;
		A2_TOTAL_NUMBER_ELIGIBLE = a2_TOTAL_NUMBER_ELIGIBLE;
		A2_ANNUAL_ASSURED_AMOUNT = a2_ANNUAL_ASSURED_AMOUNT;
		A2_ANNUAL_VARIABLE_AMOUNT = a2_ANNUAL_VARIABLE_AMOUNT;
		A2_NUM_OF_FUNC_AREA = a2_NUM_OF_FUNC_AREA;
		A2_OVERTIME_NUMBER = a2_OVERTIME_NUMBER;
		A2_OVERTIME_AMOUNT = a2_OVERTIME_AMOUNT;
		A3_PRODUCT = a3_PRODUCT;
		A3_TOTAL_NUMBER = a3_TOTAL_NUMBER;
		A3_TOTAL_NUMBER_ELIGIBLE = a3_TOTAL_NUMBER_ELIGIBLE;
		A3_ANNUAL_ASSURED_AMOUNT = a3_ANNUAL_ASSURED_AMOUNT;
		A3_ANNUAL_VARIABLE_AMOUNT = a3_ANNUAL_VARIABLE_AMOUNT;
		A3_NUM_OF_FUNC_AREA = a3_NUM_OF_FUNC_AREA;
		A3_OVERTIME_NUMBER = a3_OVERTIME_NUMBER;
		A3_OVERTIME_AMOUNT = a3_OVERTIME_AMOUNT;
		A4_PRODUCT = a4_PRODUCT;
		A4_TOTAL_NUMBER = a4_TOTAL_NUMBER;
		A4_TOTAL_NUMBER_ELIGIBLE = a4_TOTAL_NUMBER_ELIGIBLE;
		A4_ANNUAL_ASSURED_AMOUNT = a4_ANNUAL_ASSURED_AMOUNT;
		A4_ANNUAL_VARIABLE_AMOUNT = a4_ANNUAL_VARIABLE_AMOUNT;
		A4_NUM_OF_FUNC_AREA = a4_NUM_OF_FUNC_AREA;
		A4_OVERTIME_NUMBER = a4_OVERTIME_NUMBER;
		A4_OVERTIME_AMOUNT = a4_OVERTIME_AMOUNT;
		A5_PRODUCT = a5_PRODUCT;
		A5_TOTAL_NUMBER = a5_TOTAL_NUMBER;
		A5_TOTAL_NUMBER_ELIGIBLE = a5_TOTAL_NUMBER_ELIGIBLE;
		A5_ANNUAL_ASSURED_AMOUNT = a5_ANNUAL_ASSURED_AMOUNT;
		A5_ANNUAL_VARIABLE_AMOUNT = a5_ANNUAL_VARIABLE_AMOUNT;
		A5_NUM_OF_FUNC_AREA = a5_NUM_OF_FUNC_AREA;
		A5_OVERTIME_NUMBER = a5_OVERTIME_NUMBER;
		A5_OVERTIME_AMOUNT = a5_OVERTIME_AMOUNT;
		A6_PRODUCT = a6_PRODUCT;
		A6_TOTAL_NUMBER = a6_TOTAL_NUMBER;
		A6_TOTAL_NUMBER_ELIGIBLE = a6_TOTAL_NUMBER_ELIGIBLE;
		A6_ANNUAL_ASSURED_AMOUNT = a6_ANNUAL_ASSURED_AMOUNT;
		A6_ANNUAL_VARIABLE_AMOUNT = a6_ANNUAL_VARIABLE_AMOUNT;
		A6_NUM_OF_FUNC_AREA = a6_NUM_OF_FUNC_AREA;
		A6_OVERTIME_NUMBER = a6_OVERTIME_NUMBER;
		A6_OVERTIME_AMOUNT = a6_OVERTIME_AMOUNT;
		A7_PRODUCT = a7_PRODUCT;
		A7_TOTAL_NUMBER = a7_TOTAL_NUMBER;
		A7_TOTAL_NUMBER_ELIGIBLE = a7_TOTAL_NUMBER_ELIGIBLE;
		A7_ANNUAL_ASSURED_AMOUNT = a7_ANNUAL_ASSURED_AMOUNT;
		A7_ANNUAL_VARIABLE_AMOUNT = a7_ANNUAL_VARIABLE_AMOUNT;
		A7_NUM_OF_FUNC_AREA = a7_NUM_OF_FUNC_AREA;
		A7_OVERTIME_NUMBER = a7_OVERTIME_NUMBER;
		A7_OVERTIME_AMOUNT = a7_OVERTIME_AMOUNT;
		A8_PRODUCT = a8_PRODUCT;
		A8_TOTAL_NUMBER = a8_TOTAL_NUMBER;
		A8_TOTAL_NUMBER_ELIGIBLE = a8_TOTAL_NUMBER_ELIGIBLE;
		A8_ANNUAL_ASSURED_AMOUNT = a8_ANNUAL_ASSURED_AMOUNT;
		A8_ANNUAL_VARIABLE_AMOUNT = a8_ANNUAL_VARIABLE_AMOUNT;
		A8_NUM_OF_FUNC_AREA = a8_NUM_OF_FUNC_AREA;
		A8_OVERTIME_NUMBER = a8_OVERTIME_NUMBER;
		A8_OVERTIME_AMOUNT = a8_OVERTIME_AMOUNT;
		A9_PRODUCT = a9_PRODUCT;
		A9_TOTAL_NUMBER = a9_TOTAL_NUMBER;
		A9_TOTAL_NUMBER_ELIGIBLE = a9_TOTAL_NUMBER_ELIGIBLE;
		A9_ANNUAL_ASSURED_AMOUNT = a9_ANNUAL_ASSURED_AMOUNT;
		A9_ANNUAL_VARIABLE_AMOUNT = a9_ANNUAL_VARIABLE_AMOUNT;
		A9_NUM_OF_FUNC_AREA = a9_NUM_OF_FUNC_AREA;
		A9_OVERTIME_NUMBER = a9_OVERTIME_NUMBER;
		A9_OVERTIME_AMOUNT = a9_OVERTIME_AMOUNT;
		REPORT_CODE = rEPORT_CODE;
		REPORT_NAME = rEPORT_NAME;
		REPORT_DATE = rEPORT_DATE;
		REPORT_DUE_DATE = rEPORT_DUE_DATE;
		REP_SUBMIT_DATE = rEP_SUBMIT_DATE;
		REP_PERIOD_FROM = rEP_PERIOD_FROM;
		REP_PERIOD_TO = rEP_PERIOD_TO;
		REP_FREQ = rEP_FREQ;
		NIL_REPORT_FLG = nIL_REPORT_FLG;
		ARCH_FLG = aRCH_FLG;
		ENTITY_FLG = eNTITY_FLG;
		DEL_FLG = dEL_FLG;
		MODIFY_FLG = mODIFY_FLG;
		ENTRY_USER = eNTRY_USER;
		MODIFY_USER = mODIFY_USER;
		VERIFY_USER = vERIFY_USER;
		ENTRY_TIME = eNTRY_TIME;
		MODIFY_TIME = mODIFY_TIME;
		VERIFY_TIME = vERIFY_TIME;
		QTR_FLG = qTR_FLG;
	}
	public T3ORReport() {
		super();
		// TODO Auto-generated constructor stub
	}
		
}
